c
expenses
c
year.to_i
month.to_i
year
month
 expenses.map(&:expenses_in_euro).reduce(&:+)
c
n
c
sum_of_exp_in_month(expense_list, "05", "15").to_i
sum_of_exp_in_month(expense_list, "05", "15")
sum_of_exp_in_month
expense_list
expenses
c
a.when.strftime('%m').to_i == month
a.when.strftime('%m').to_i
a.when.strftime('%m') == month.to_s
month.to_s
month
a.when.strftime('%m') == month
a.when.strftime('%m')
a.when.strftime
a.when
a
a = expense_list.expenses[1]
expense_list.expenses[1]
expense_list.expenses[2]
expense_list.expenses.map { |e| e.when }
expense_list.expenses.first.when
expense_list.expenses.first
expense_list.expenses
expense_list
month
expenses
c
 Notifier.new_expense_list_created("andneuma@posteo.de", @expense_list.name)
n
c
Notifier.new_expense_list_created(User.find(session[:user_id]), @expense_list.name)
n
c
url_options[:_recall][:id]
url_options._recall
url_options
URI
url
user_id
:id
:user_id
c
@user
session[:user_id]
params[:user_id]
continue
c
Notifier.expense_list_member_removal_notification(blubb, expense_list).deliver_now
blubb
blubb = removed_members.first
removed_members
c
Notifier.expense_list_member_signup_notification(member, expense_list).deliver_now
new_member
@expense_list.members
@expense_list
c
expenses_per_month[month_of_expense].sort_by {|e| e[:when]}
c
expenses_per_month[month_of_expense].sort_by {|e| e[:when]}
expenses_per_month[month_of_expense]
c
expenses_per_month[month_of_expense].sort_by {|e| e[:when]}
expenses_per_month[month_of_expense].each {|e| puts e}
expenses_per_month[month_of_expense].sort_by
expenses_per_month[month_of_expense].sort
expenses_per_month[month_of_expense]
month_of_expense
expenses_per_month
